3) Escreva um programa, que contém uma estrutura do tipo Lista Simplesmente Encadeada que
armazena números reais. Execute o menu de opções abaixo através de chamadas às funções
para:
	1) Inserir um elemento na lista
	2) Contar os nós da lista
	3) Buscar um elemento (lido via teclado) na lista
	4) Remover um elemento k (lido via teclado) da lista
	5) Imprimir a lista
	6) Sair
O programa acaba quando o usuário escolher a opção 6.

4) Dada uma estrutura livraria com código, título, autor, ano e editora. Faça um programa,usando Listas Simplesmente Encadeadas, com opções para:
	I- Inserir um livro na lista, 
	B- Buscar um livro na lista, 
	R- Remover um livro da lista,
	E- Escrever todos os livros da lista.
Na busca, leia um código qualquer e mostre título e autor, caso o código exista na lista. A
lista deve conter n livros lidos via teclado.

5) Escreva um programa que leia e imprima um vetor com n (lido via teclado) elementos
inteiros. Em seguida, gere uma Lista Simplesmente Encadeada ordenada com os elementos
do vetor. Imprima a lista gerada.


=======

7) Faça um programa que leia números inteiros e insira-os numa Lista Simplesmente Encadeada Circular. Imprima a lista. 
Imprima o número de nós da lista. Em seguida, chame uma função que receba a Lista Simplesmente Encadeada Circular e o valor do k-ésimo nó (lido e testado na main) e divida a lista no k-ésimo nó. 
Retorne ponteiro para o final da primeira parte da lista. Não esqueça de tratar o ponteiro do final da lista restante.
Protótipo: struct lista *divideKlsec(struct lista *p, int k);


9) Escreva um programa, que contém uma estrutura do tipo Lista Simplesmente Encadeada
Circular que armazena números inteiros e execute as seguintes funções:
	a) Criar uma LSEC com n nós;
	b) Imprimir os elementos da lista;
	c) Contar os elementos da lista;
	d) Remover o k-ésimo nó da lista, o nó k deve ser indicado pelo usuário (testar se tal
	elemento existe);
	e) Criar e imprimir uma cópia da lista;
	f) Inserir um nó antes do k-ésimo nó da lista, o nó k deve ser indicado pelo usuário.

10) Escreva um programa, que contém uma estrutura do tipo Lista Duplamente Encadeada que
armazena números inteiros e execute as seguintes funções:
	a) Criar uma LDE com n nós;
	b) Imprimir os elementos da lista;
	c) Contar os elementos da lista;
	d) Remover o k-ésimo nó da lista, o nó k deve ser indicado pelo usuário (testar se tal
	elemento existe);
	e) Criar e imprimir uma cópia da lista;
	f) Inserir um nó antes do k-ésimo nó da lista, o nó k deve ser indicado pelo usuário.

12) Considere uma estrutura de Lista Duplamente Encadeada que contém números inteiros.
Escreva um programa que leia e imprima duas listas L1 e L2. Logo após, crie uma função
que concatena a lista L2 no final da lista L1. A função deve retornar ponteiro para o início da
lista concatenada. Imprima a lista concatenada.

18) Escreva um programa que insira n (lido via teclado) nós numa Lista Duplamente
Encadeada Ordenada que armazena em cada nó uma chave inteira e um nome. Em
seguida, as seguintes operações devem ser definidas:
	a) Buscar uma chave na lista;
	b) Inserir um novo elemento na lista mantendo a ordem;
	c) Remover um elemento da lista;
	d) Imprimir os valores da lista;
	e) Copiar uma lista L1 para uma lista L2.

19) Escreva um programa que insira (usando chamada de função) os dados de n (lido via
teclado) alunos de uma turma numa Lista Duplamente Encadeada cujo tipo que representa
um nó da lista é dado por:
	struct aluno{
		int mat;
		char nome[80];
		float media;
		struct aluno *eprox;
		struct aluno *dprox;
	};
Imprima a lista (usando chamada de função). Busque uma matricula lida via teclado na
lista (usando chamada de função), mostre se achou ou não achou. Em seguida, implemente
uma função que receba a lista criada e retorne uma nova lista dos alunos aprovados, ou
seja, os alunos com média maior ou igual a 6.0. Imprima a nova lista. Crie uma outra
função que recebe a lista e e retorne uma nova lista dos alunos que estão reprovados, ou
seja, com média menor do que 4.0. Imprima a lista resultante.

20) Escreva um programa que leia vários números reais positivos e insira-os em um
arquivo texto (um número por linha). Em seguida, leia os dados do arquivo e insira-os
numa Lista Duplamente Encadeada através da chamada de uma função que retorna
ponteiro para o início da lista. Logo após, gere um menu com as seguintes opções:
	1- Imprimir a lista
	2- Buscar um elemento na lista
	3- Remover um valor da lista (lido via teclado)
	4- Contar os nós da lista
	5- Gerar uma cópia da lista num vetor
	6- Sair
Crie funções para cada opção do menu, exceto a opção 6. Após executar a opção 3 ou a
opção 5 imprima a lista resultante ou o vetor resultante. O programa acaba quando for
digitado a opção 6.