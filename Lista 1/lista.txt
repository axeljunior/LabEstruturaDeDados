1) Conte o número de passos e dê a complexidade (pior caso) dos trechos de código abaixo: (Ver Lista)

10) Escreva um programa que leia 50 valores inteiros e insira-os numa pilha. Em seguida, leia um número 50 valores inteiros e insira-os numa fila circular com contador. Logo após, forneça o maior, o menor e a média aritmética dos elementos na pilha e na fila, respectivamente.

11) Desenvolva um programa leia duas filas f1 e f2 circulares com nó bobo com 20 números reais
cada uma. Imprima as filas. Em seguida, chame uma função para testar se a fila f1 tem mais
elementos que a fila f2.

13) Escreva um programa que contenha uma estrutura de lista sequencial não ordenada com dados
de 40 alunos (nome, matricula e média) e forneça as seguintes opções:
	1) Inserir um aluno na lista; (ler nome, matricula e média)
	2) Excluir um aluno da lista;
	3) Calcular média da turma;
	4) Imprimir dados dos alunos acima da média;
	5) Ordenar a lista;
	6) Imprimir lista;
	7) Sair.
Na implementação da opção 5, deve-se utilizar o algoritmo inserctionSort.
O programa termina quando for digitado a opção 7.

15) Considere a lista de clientes da livraria contendo nome e código de identificação de 20 clientes,
em que os elementos estão ordenados. Escreva um programa que contenha funções para:
	a) Inserir um cliente na lista;
	b) Imprimir os dados da lista;
	c) Ler um código de identificação e buscar o cliente (usar busca binária);
	d) Retirar um cliente da lista.
	e) Sair

17) Escreva uma função para as seguintes operações adicionais para uma Lista Sequencial L1:
- Verificar se uma Lista L1 está ordenada (em ordem crescente ou decrescente);
- Copiar uma Lista L1 para uma outra L2. Use necessariamente a função insere();
- Copiar uma Lista L1 para uma Lista L2 eliminando elementos repetidos. Use a função
insere();
- Inverter uma lista L1;
- Intercalar L1 com L2 gerando L3 sem elementos repetidos (considere L1 e L2 ordenadas);
- A partir de L1 e L2, gere L4 considerando os elementos repetidos em ambas as listas
(considere L1 e L2 ordenadas).

18) Faça um programa que exiba o seguinte menu principal:

- - - - - -Editor de Listas - - - - - - - -
	1- Exibir a lista
	2- Inserir na lista
	3- Remover da lista
	4- Exibir um dado elemento da lista
	5- Exibir posição de um dado elemento na lista
	6- Esvaziar lista
	7- Sair

O usuário deve digitar a opção de sua preferência para executar uma operação. implemente a
lista de números inteiros. Cada uma das operações do menu é descrita a seguir:

	a) Na opção 1, devem ser exibidos o tamanho corrente da lista e todos os seus elementos;
	b) Na opção 2, devem ser lidos não somente o elemento a ser inserido, mas também a
	posição na lista onde o usuário deseja realizar a inserção;
	c) Na opção 3, deve ser lida a posição na lista do elemento a ser removido;
	d) Na opção 4, deve ser lida a posição do elemento;

	e) Na opção 5, deve ser lido o valor do elemento cuja posição se quer exibir;
	f) Na opção 6, deve ser exibida uma mensagem de confirmação para o usuário antes da lista
	ser totalmente esvaziada;
	g) Após a execução de cada operação, o programa deve retornar ao menu principal para que
	o usuário possa executar outras opções ou encerre o programa;
	h) Lembre-se: em cada uma das operações, identifique possíveis situações de erros do
	usuário e exiba mensagens para ele nestas situações. (Ex. o programa deve exibir mensagens
	no caso do usuário tentar remover um item ou esvaziar uma lista que está vazia, inserir
	elemento numa lista que já está cheia, inserir posições inválidas, etc.).