/*Escrever um programa que leia informações de 40 estudantes do curso de Linguagem C,
o nome, a matricula e a média. Defina a estrutura aluno e um vetor turma do tipo aluno. O
programa deverá também chamar funções para:
a) Calcular e imprimir a média da turma;
b) Calcular imprimir o número de alunos acima da média;
c) Identificar e imprimir a matrícula do aluno com a maior média;
d) Identificar e imprimir a matrícula do aluno com a menor média;
e) Listar a matrícula de todos os alunos com média abaixo da média da turma*/
#include<stdio.h>
#define TAM 40
struct aluno{
	char nome;
	int matricula;
	float media;	
};
void leitura(struct aluno *b)
{
	int i;
	
	for(i=0;i<TAM;i++)
	{
		printf("\nNome:");
		gets(&b->nome);
		printf("\nMatricula:");
		scanf("%d",&b->matricula);
		printf("\nMedia:");
		scanf("%f",&b->media);
		fgetc(stdin);
		printf("\n");
		b++;
	}
}
float media_turma(struct aluno *b)
{
	int i;
	float s=0,mt;
	
	for(i=0;i<TAM;i++)
	{
		s+=b->media;
		b++;
	}
	mt=s/TAM;
	printf("\nMedia da turma: %.2f",mt);
	return(mt);
}
void acima_media(struct aluno *b,float mt)
{
	int i,cont=0;
	
	for(i=0;i<TAM;i++)
	{
		if((b->media)>mt)
			cont++;
		b++;
	}
	printf("\nNumero de alunos acima da media: %d",cont);
}
void maior_media(struct aluno *b)
{
	int i,mat;
	float maior;
	
	maior=b->media;
	mat=b->matricula;
	
	for(i=0;i<TAM;i++)
	{
		if((b->media)>maior)
		{
			maior=(b->media);
			mat=(b->matricula);
		}
		b++;
	}
	printf("\nMatricula do aluno com maior media: %d",mat);
}
void menor_media(struct aluno *b)
{
	int i,mat;
	float menor;
	
	menor=b->media;
	mat=b->matricula;
	
	for(i=0;i<TAM;i++)
	{
		if((b->media)<menor)
		{
			menor=(b->media);
			mat=(b->matricula);
		}
		b++;
	}
	printf("\nMatricula do aluno com menor media: %d",mat);
}
void abaixo_media(struct aluno *b,float mt)
{
	int i;
	
	for(i=0;i<TAM;i++)
	{
		if((b->media)<mt)
		{
			printf("\n\n\nLista de alunos abaixo da media:");
			printf("\nMatricula: %d",b->matricula);
		}
		b++;
	}
	
}
int main()
{
	struct aluno turma[TAM];
	float m;
	
	leitura(turma);
	m=media_turma(turma);
	acima_media(turma,m);
	maior_media(turma);
	menor_media(turma);
	abaixo_media(turma,m);
}